PPT封面
各位专家-评委-大家好（点头），我是-成都外国语学校的-千里冰封。 下面我对我的论文——《Android插件化编程的未来》进行一个简要的介绍。（指PPT）我主要是针对降低开发App成本、增强对App源码的保护作的一个研究，然后我将展示一款基于此理论的App。我先声明一下，App完全是我个人编写的，每一行代码，以及后端数据的整理都是我。
PPT第二页
（拿起手机）智能手机已经走入大家的生活中，广泛地影响着我们。Android是目前属于Google公司的一款智能手机操作系统，特征是开放、自由，市场占有率70%。我个人也是一名Android开发者，对编程有着极其浓厚的兴趣。
想为Android开发应用程序的话，你有许多选择——
PPT第三页
任何开发都是面向原生最好，因此我个人最推崇的技术是Kotlin，其次是Java。当然Android也存在NDK，不过我个人不是很推崇使用非JVM语言开发Android。
PPT第四页
（以上一分钟）
开发一款App的主要流程大概是这样，可以看到，最重要的其实是发布上线后的维护与更新——没有人能打造出一开始就完美的产品，也没有人能保证自己的产品一直在停留在风口浪尖。 所以我们我们的产品需要更新换代，对吧。
目前Android开发存在着什么样的问题呢？
PPT第五页
可以看到这几点。（念一遍）
PPT第六页
（念一遍）当然最好的还是将App模块化，也就是所谓的（PPT现字）插件化编程了。我们来看看插件化编程的优点。
PPT第七页
（念一遍）我在论文中也提到了这些插件化编程的优点。目前实现插件化编程的主要方式还是基于ClassLoader的——（边说边翻页）
PPT第八页
这种技术最早是大众点评在使用，出现于2011年。后来360、QQ等App也加入了插件化的行列。当你使用QQ第一次收到好友发来的word文档时，它会提示你加载一个doc插件，这就是QQ的插件化了。
不过我也有自己的想法，那就是使用领域特定编程语言，即DSL来代替普通插件。
PPT第九页
既然都有了即成的插件化编程方案，我为什么还要提出这么一种方案呢？
我的理论其实是对现有技术的扩展。它通过特定的格式以及编码方式、加密方式来表达数据，因此现在所使用的xml或者json这样的传输数据的方案都在我这个“DSL”概念之中。但是——
（PPT再显示一句）
既然是DSL，作为一门编程语言它就是能描述逻辑的。我在论文中提到了这么一段代码。它是由我自己想出来的一门语言编写的一个音乐播放器的插件，功能是增加对一种新的音频格式的支持。它首先读取歌曲的名字（指向name），这个名字在音频文件中占四个字节（指向4），类型是字符串（指向string），接下来是浮点类型的歌曲时间长度，字符串类型的歌手名，以及整数类型的声道数，即单声道或者双声道。然后调过两个字节（指向skip），开始读取音频波形数据。
这只是一个简单的例子，如果你要直接使用通用语言来实现上面的代码所提供的功能的话，需要的代码量可远远不仅仅是这么一点。我自己也做过音频解码，因此想到了这个例子。
（手机递给老师）这是我前几天捣鼓出来的一款Android应用程序，你在里面看到的所有内容以及它工作的机理都是建立在这个理论之上的。目前它使用的是（指向PPT）描述数据的DSL。它没有HTML5那样的笨拙，却拥有HTML5的灵活。
在App后台默默工作的这门DSL是我自己想出来的，它目前能描述成组的数据，以及定义一个类似C语言define语句那样的宏。它目前由一个不大成熟的Parser解释执行，我准备继续花时间来完善这个App的健壮性，以及优化这门DSL。
（60s展示App）
PPT第十页
在我的论文中我讲到了通过实现一门解释性DSL解释器的方法来执行这个插件的想法，到后来我又出于保护源代码的考虑，我又在中间添加了一层字节码编译的过程，而App就起到一个类似虚拟机的作用，它解释字节码运行你的插件。你甚至可以通过定制精简JVM来实现你的插件化编程。这也能实现AIDE那样的手机编译打包功能。而Java本身作为一门服务器语言，甚至可能通过这样的方法将服务器移植到Android上。
（30s）
PPT第十一页

我现在所做的事情其实只是大胆地猜想，需要的是则是小心地求证，继续完善我的编程语言。我乐-在-其-中。